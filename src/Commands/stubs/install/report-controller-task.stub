<?php

namespace App\Http\Controllers\Reports;

use App\Http\Controllers\Reports\LaravueReportController;

class TaskReportController extends LaravueReportController
{
    // Overrided Superclass methods
    public function getFileName(){
        return 'tarefas' ;
    }

    public function getPdfOrientation(){
        return \App\Models\Report::ORIENTATION_LANDSCAPE;
    }

    /**
     * Implementação do modelo da classe abstrata em BaseController
     *
     * @return \App\Models\Task::class
     */
    protected function getModel()
    {
        return  \App\Models\Task::class;
    }

    /**
     * Implementação do título do relatório da classe abstrata 
     * em BaseController
     *
     * @return String
     */
    public function getTitle(){
        return 'Listagem de Tarefas';
    }

    /**
     * Alterações necessárias antes de mostrar a coleção do modelo
     *
     * @return \App\Models\Task
     */
    public function beforeIndex($data) { 
		$reportData = new \Illuminate\Support\Collection(); 
		foreach($data as $item) {
            $line = array(
                'Tarefa' => "[" . $item->taskGroup->name . "] " . $item->name,
                'Início' => date( 'd/m/Y', strtotime( $item->started_at ) ),
                'Fim' => date( 'd/m/Y', strtotime( $item->ended_at ) ),
                'Status' => $item->taskStatus->name,
                'Roteiro' => $item->is_roadmap == 1 ? "Sim" : "Não",
                'Marco Histórico' => $item->is_milestone == 1 ? "Sim" : "Não",
                'Versão' => $item->version->version_number . '.' . str_pad($item->version->feature_number, 3, "0", STR_PAD_LEFT ) . '.' . str_pad($item->version->issue_number, 3, "0", STR_PAD_LEFT ),
                'Responsável' => $item->user->name,
            );
            $reportData->push($line);
		}

        return $reportData;
    }
}