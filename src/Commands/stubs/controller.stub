<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Http\Response;

class {{ model }}Controller extends MPMGController
{
    /**
     * Implementação do modelo da classe abstrata em BaseController
     *
     * @return \App\Version::class
     */
    protected function getModel()
    {
        return  \App\{{ model }}::class;
    }

    /**
     * Preenche o modelo com os valores correspondentes ao request
     *
     * @return \App\{{ model }}
     */
    public function setModel(Request $request)
    {
        // verifica se é edição - PUT - ou inlcusão - POST.
        $model = $request->isMethod('put') ? \App\{{ model }}::findOrFail($request->id) : new \App\{{ model }};

        // Preencher os atributos do modelo
        {{ fields }}

        return  $model;
    }

    /**
     * Método que passa as validações para o método que implementa Validator no MPMGController
     *
     * @return array de validação dos campos do modelo
     */
    public function getModelValidation($data)
    {
        return [
			'rules' =>  [
                {{ rules }}
                // Exemplo de unique composta
                // 'field' => 'required | string | unique:table,field,'
                //     . $data['id'] . ',id,'
                //     . 'foreing_key_id,' .  $data['foreing_key_id'],
                // Exemplo de unique simples
                // 'field' => 'required|unique:table,field,' . $data['id'],
            ],
            // 'messages'=> [
            //    'field.unique' => 'Já existe ...'
            // ]
        ];
    }

    /**
     * Métodos de inserção de lógica específica.
     */
    // public function beforeIndex($data) { return $data; }
    // public function beforeShow($data) { return $data; }
    // public function beforeSave($model) { return $model; }
    // public function afterSave($model) { return $model; }
    // public function beforeDestroy($model) { return $model; }
}
