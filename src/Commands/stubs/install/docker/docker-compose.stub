version: '3'
services:

  #Laravel App
  {{ applicationName }}:
    build:
      context: .
      dockerfile: Dockerfile
    image: mpmg/{{ applicationName }}
    container_name: {{ applicationName }}
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: {{ applicationName }}
      SERVICE_TAGS: dev
      XDEBUG_CONFIG: remote_host=host.docker.internal remote_port=9000 remote_enable=1
      TZ: America/Sao_Paulo
    working_dir: /var/www/html
    volumes:
      - ../frontend:/var/www/html/{{ applicationName }}/
      - ../api:/var/www/html/{{ applicationName }}/ws/
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - mynet
  
  #Nginx Service
  nginx:
    image: nginx:1.14.2-alpine
    container_name: nginx
    restart: unless-stopped
    tty: true
    environment:
        TZ: America/Sao_Paulo
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../frontend/:/var/www/html/{{ applicationName }}/
      - ../api/:/var/www/html/{{ applicationName }}/ws/
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - ./log/nginx/:/var/log/nginx/
    networks:
      - mynet

  #Mssql Service
  mssql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: mssql-local
    restart: unless-stopped
    tty: true
    command: bash -c "/usr/src/entrypoint.sh"
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: {{ databaseUserPassword }}
      MSSQL_PID: Express
      TZ: America/Sao_Paulo
    ports:
      - "1433:1433"
    volumes:
      - ./log/mssql:/var/opt/mssql/log/
      - ./mssql/usr/src:/usr/src/
    networks:
      - mynet

#Docker Networks
networks:
  mynet:
    driver: bridge
#Volumes
volumes:
  sqldata:
    driver: local
  