<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Http\Response;
use Spatie\Permission\Models\Role;
use stdClass;

class RolePermissionController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $response = array();

        $roles = Role::all();
        foreach( $roles as $role) {
            $obj = new \stdClass();
            $obj->id = $role->id;
            $obj->name = $role->name;
            $obj->permissions = Role::findByName($role->name)->permissions;
            array_push($response, $obj);

        }
        return response(
            [
                'message' => 'record fetched',
                'data' => $response
            ],
            Response::HTTP_OK
        );
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        $data = $request->all();
        $role = Role::findOrFail($id);
        $role->givePermissionTo($data['permission']);

        return response(
            [
                'message' => 'permission gived',
                'data' => Role::findByName($role->name)->permissions
            ],
            Response::HTTP_OK
        );
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy(Request $request, $id)
    {
        $data = $request->all();
        $role = Role::findOrFail($id);
        $role->revokePermissionTo($data['permission']);

        return response(
            [
                'message' => 'permission revoked',
                'data' => Role::findByName($role->name)->permissions
            ],
            Response::HTTP_OK
        );
    }
}
